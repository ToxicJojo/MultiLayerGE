// The data that each node needs to save to be able to run page rank.
struct PageRankData {
  double Value;
  double OldValue;
}

// Proxy Protocols
struct PageRankProxyMessage {
  AlgorithmOptions AlgorithmOptions;
  OutputOptions OutputOptions;
  double InitialValue;
  double Epsilon;
  bool SeperateLayers;
}

protocol PageRankProxy {
  Type: Syn;
  Request: PageRankProxyMessage;
  Response: void;
}

struct PageRankTopNodesProxyMessage {
  AlgorithmOptions AlgorithmOptions;
  OutputOptions OutputOptions;
  int NumberOfTopNodes;
  bool SeperateLayers;
}

protocol PageRankTopNodesProxy {
  Type: Syn;
  Request: PageRankTopNodesProxyMessage;
  Response: AlgorithmResult;
}

// Server Protocols
struct PageRankSetInitialValuesMessage {
  double InitialValue;
}

protocol PageRankSetInitialValues {
  Type: Asyn;
  Request: PageRankSetInitialValuesMessage;
  Response: void;
}

struct PageRankUpdateMessage {
  bool SeperateLayers;
}

protocol PageRankUpdateRound {
  Type: Asyn;
  Request: PageRankUpdateMessage;
  Response: void;
}

protocol PageRankRemoteBulkUpdate {
  Type: Asyn;
  Request: RemoteBulkUpdateMessage;
  Response: void;
}

protocol PageRankRemoteUpdateAnswer {
  Type: Asyn;
  Request: void;
  Response: void;
}

struct PageRankNormalizationMessage {
  double Sum;
}

protocol PageRankNormalization {
  Type: Asyn;
  Request: PageRankNormalizationMessage;
  Response: void;
}

struct PageRankTopNodesServerMessage {
  int NumberOfTopNodes;
  bool SeperateLayers;
}

protocol PageRankTopNodesServer {
  Type: Asyn;
  Request: PageRankTopNodesServerMessage;
  Response: void;
}
